" iqb motions {{{1
" with doc foo(bar) {{{2
Given (foo(bar, arg, xyz)):
  foo(bar, arg, xyz)

" start on f {{{3
Do (diqb with cursor on f):
  diqb
Expect (Nothing deleted):
  foo(bar, arg, xyz)

" start on b {{{3
Do (diqb with cursor on b):
  fbdiqb
Expect (First argument deleted):
  foo(, arg, xyz)

" start on second a {{{3
Do (diqb with cursor on second a):
  2fadiqb
Expect (Second argument deleted):
  foo(bar, , xyz)

" start on x {{{3
Do (diqb with cursor on x):
  fxdiqb
Expect (Third argument deleted):
  foo(bar, arg, )

" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo(
    bar,
    arg,
    xyz
  )

" start on b {{{3
Do (diqb with cursor on f):
  diqb
Expect (Nothing deleted):
  foo(
    bar,
    arg,
    xyz
  )

" start on b {{{3
Do (diqb with cursor on b):
  jfbdiqb
Expect (First argument deleted):
  foo(
    ,
    arg,
    xyz
  )

" start on second a {{{3
Do (diqb with cursor on second a):
  jjfadiqb
Expect (Second argument deleted):
  foo(
    bar,
    ,
    xyz
  )

" " start on z {{{3
Do (diqb with cursor on z):
  jjjfxdiqb
Expect (Third argument deleted):
  foo(
    bar,
    arg,
    
  )

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo( bar
     , arg
     , xyz
     )

" start on f {{{3
Do (diqb with cursor on f):
  diqb
Expect (Nothing deleted):
  foo( bar
     , arg
     , xyz
     )

" start on b {{{3
Do (diqb with cursor on b):
  fbdiqb
Expect (First argument deleted):
  foo( 
     , arg
     , xyz
     )

" start on second a {{{3
Do (diqb with cursor on second a):
  jfadiqb
Expect (Second argument deleted):
  foo( bar
     , 
     , xyz
     )

" start on x {{{3
Do (diqb with cursor on x):
  jjfxdiqb
Expect (Third argument deleted):
  foo( bar
     , arg
     , 
     )

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo(bar, arg
      xyz)

" start on f {{{3
Do (diqb with cursor on f):
  diqb
Expect (Nothing deleted):
  foo(bar, arg,
      xyz)

" start on b {{{3
Do (diqb with cursor on b):
  fbdiqb
Expect (First argument deleted):
  foo(, arg,
      xyz)

" start on second a {{{3
Do (diqb with cursor on second a):
  2fadiqb
Expect (Second argument deleted):
  foo(bar, ,
      xyz)

" start on x {{{3
Do (diqb with cursor on x):
  jfxdiqb
Expect (Third argument deleted):
  foo(bar, arg,
      )

" iqB motions {{{1
" with doc foo(bar) {{{2
Given (foo{bar, arg, xyz}):
  foo{bar, arg, xyz}

" start on f {{{3
Do (diqB with cursor on f):
  diqB
Expect (Nothing deleted):
  foo{bar, arg, xyz}

" start on b {{{3
Do (diqB with cursor on b):
  fbdiqB
Expect (First argument deleted):
  foo{, arg, xyz}

" start on second a {{{3
Do (diqB with cursor on second a):
  2fadiqB
Expect (Second argument deleted):
  foo{bar, , xyz}

" start on x {{{3
Do (diqB with cursor on x):
  fxdiqB
Expect (Third argument deleted):
  foo{bar, arg, }
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo{
    bar,
    arg,
    xyz
  }

" start on f {{{3
Do (diqB with cursor on f):
  diqB
Expect (Nothing deleted):
  foo{
    bar,
    arg,
    xyz
  }

" start on b {{{3
Do (diqB with cursor on b):
  jfbdiqB
Expect (First argument deleted):
  foo{
    ,
    arg,
    xyz
  }

" start on second a {{{3
Do (diqB with cursor on second a):
  jjfadiqB
Expect (Second argument deleted):
  foo{
    bar,
    ,
    xyz
  }

" " start on z {{{3
Do (diqB with cursor on z):
  jjjfxdiqB
Expect (Third argument deleted):
  foo{
    bar,
    arg,
    
  }

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo{ bar
     , arg
     , xyz
     }

" start on f {{{3
Do (diqB with cursor on f):
  diqB
Expect (Nothing deleted):
  foo{ bar
     , arg
     , xyz
     }

" start on b {{{3
Do (diqB with cursor on b):
  fbdiqB
Expect (First argument deleted):
  foo{ 
     , arg
     , xyz
     }

" start on second a {{{3
Do (diqB with cursor on second a):
  jfadiqB
Expect (Second argument deleted):
  foo{ bar
     , 
     , xyz
     }

" start on x {{{3
Do (diqB with cursor on x):
  jjfxdiqB
Expect (Third argument deleted):
  foo{ bar
     , arg
     , 
     }

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo{bar, arg
      xyz}

" start on f {{{3
Do (diqB with cursor on f):
  diqB
Expect (Nothing deleted):
  foo{bar, arg,
      xyz}

" start on b {{{3
Do (diqB with cursor on b):
  fbdiqB
Expect (First argument deleted):
  foo{, arg,
      xyz}

" start on second a {{{3
Do (diqB with cursor on second a):
  2fadiqB
Expect (Second argument deleted):
  foo{bar, ,
      xyz}

" start on x {{{3
Do (diqB with cursor on x):
  jfxdiqB
Expect (Third argument deleted):
  foo{bar, arg,
      }

" iqr motions {{{1
" with doc foo(bar) {{{2
Given (foo[bar, arg, xyz]):
  foo[bar, arg, xyz]

" start on f {{{3
Do (diqr with cursor on f):
  diqr
Expect (Nothing deleted):
  foo[bar, arg, xyz]

" start on b {{{3
Do (diqr with cursor on b):
  fbdiqr
Expect (First argument deleted):
  foo[, arg, xyz]

" start on second a {{{3
Do (diqr with cursor on second a):
  2fadiqr
Expect (Second argument deleted):
  foo[bar, , xyz]

" start on x {{{3
Do (diqr with cursor on x):
  fxdiqr
Expect (Third argument deleted):
  foo[bar, arg, ]
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo[
    bar,
    arg,
    xyz
  ]

" start on f {{{3
Do (diqr with cursor on f):
  diqr
Expect (Nothing deleted):
  foo[
    bar,
    arg,
    xyz
  ]

" start on b {{{3
Do (diqr with cursor on b):
  jfbdiqr
Expect (First argument deleted):
  foo[
    ,
    arg,
    xyz
  ]

" start on second a {{{3
Do (diqr with cursor on second a):
  jjfadiqr
Expect (Second argument deleted):
  foo[
    bar,
    ,
    xyz
  ]

" " start on z {{{3
Do (diqr with cursor on z):
  jjjfxdiqr
Expect (Third argument deleted):
  foo[
    bar,
    arg,
    
  ]

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo[ bar
     , arg
     , xyz
     ]

" start on f {{{3
Do (diqr with cursor on f):
  diqr
Expect (Nothing deleted):
  foo[ bar
     , arg
     , xyz
     ]

" start on b {{{3
Do (diqr with cursor on b):
  fbdiqr
Expect (First argument deleted):
  foo[ 
     , arg
     , xyz
     ]

" start on second a {{{3
Do (diqr with cursor on second a):
  jfadiqr
Expect (Second argument deleted):
  foo[ bar
     , 
     , xyz
     ]

" start on x {{{3
Do (diqr with cursor on x):
  jjfxdiqr
Expect (Third argument deleted):
  foo[ bar
     , arg
     , 
     ]

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo[bar, arg
      xyz]

" start on f {{{3
Do (diqr with cursor on f):
  diqr
Expect (Nothing deleted):
  foo[bar, arg,
      xyz]

" start on b {{{3
Do (diqr with cursor on b):
  fbdiqr
Expect (First argument deleted):
  foo[, arg,
      xyz]

" start on second a {{{3
Do (diqr with cursor on second a):
  2fadiqr
Expect (Second argument deleted):
  foo[bar, ,
      xyz]

" start on x {{{3
Do (diqr with cursor on x):
  jfxdiqr
Expect (Third argument deleted):
  foo[bar, arg,
      ]

" iqa motions {{{1
" with doc foo(bar) {{{2
Given (foo(bar, arg, xyz)):
  foo<bar, arg, xyz>

" start on f {{{3
Do (diqa with cursor on f):
  diqa
Expect (Nothing deleted):
  foo<bar, arg, xyz>

" start on b {{{3
Do (diqa with cursor on b):
  fbdiqa
Expect (First argument deleted):
  foo<, arg, xyz>

" start on second a {{{3
Do (diqa with cursor on second a):
  2fadiqa
Expect (Second argument deleted):
  foo<bar, , xyz>

" start on x {{{3
Do (diqa with cursor on x):
  fxdiqa
Expect (Third argument deleted):
  foo<bar, arg, >
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo<
    bar,
    arg,
    xyz
  >

" start on f {{{3
Do (diqa with cursor on f):
  diqa
Expect (Nothing deleted):
  foo<
    bar,
    arg,
    xyz
  >

" start on b {{{3
Do (diqa with cursor on b):
  jfbdiqa
Expect (First argument deleted):
  foo<
    ,
    arg,
    xyz
  >

" start on second a {{{3
Do (diqa with cursor on second a):
  jjfadiqa
Expect (Second argument deleted):
  foo<
    bar,
    ,
    xyz
  >

" " start on z {{{3
Do (diqa with cursor on z):
  jjjfxdiqa
Expect (Third argument deleted):
  foo<
    bar,
    arg,
    
  >

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo( bar
     , arg
     , xyz
     )

" start on f {{{3
Do (diqa with cursor on f):
  diqa
Expect (Nothing deleted):
  foo( bar
     , arg
     , xyz
     )

" start on b {{{3
Do (diqa with cursor on b):
  fbdiqa
Expect (First argument deleted):
  foo( 
     , arg
     , xyz
     )

" start on second a {{{3
Do (diqa with cursor on second a):
  jfadiqa
Expect (Second argument deleted):
  foo( bar
     , 
     , xyz
     )

" start on x {{{3
Do (diqa with cursor on x):
  jjfxdiqa
Expect (Third argument deleted):
  foo( bar
     , arg
     , 
     )

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo<bar, arg
      xyz>

" start on f {{{3
Do (diqa with cursor on f):
  diqa
Expect (Nothing deleted):
  foo<bar, arg,
      xyz>

" start on b {{{3
Do (diqa with cursor on b):
  fbdiqa
Expect (First argument deleted):
  foo<, arg,
      xyz>

" start on second a {{{3
Do (diqa with cursor on second a):
  2fadiqa
Expect (Second argument deleted):
  foo<bar, ,
      xyz>

" start on x {{{3
Do (diqa with cursor on x):
  jfxdiqa
Expect (Third argument deleted):
  foo<bar, arg,
      >

" aqb motions {{{1
" with doc foo(bar) {{{2
Given (foo(bar, arg, xyz)):
  foo(bar, arg, xyz)

" start on f {{{3
Do (daqb with cursor on f):
  daqb
Expect (Nothing deleted):
  foo(bar, arg, xyz)

" start on b {{{3
Do (daqb with cursor on b):
  fbdaqb
Expect (First argument deleted):
  foo(arg, xyz)

" start on second a {{{3
Do (daqb with cursor on second a):
  2fadaqb
Expect (Second argument deleted):
  foo(bar, xyz)

" start on x {{{3
Do (daqb with cursor on x):
  fxdaqb
Expect (Third argument deleted):
  foo(bar, arg)
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo(
    bar,
    arg,
    xyz
  )

" start on b {{{3
Do (daqb with cursor on f):
  daqb
Expect (Nothing deleted):
  foo(
    bar,
    arg,
    xyz
  )

" start on b {{{3
Do (daqb with cursor on b):
  jfbdaqb
Expect (First argument deleted):
  foo(
    arg,
    xyz
  )

" start on b and delete two {{{3
Do (daqbdaqb with cursor on b):
  jfbdaqbdaqb
Expect (First two arguments deleted):
  foo(
    xyz
  )

" start on second a {{{3
Do (daqb with cursor on second a):
  jjfadaqb
Expect (Second argument deleted):
  foo(
    bar,
    xyz
  )

" " start on z {{{3
Do (daqb with cursor on z):
  jjjfxdaqb
Expect (Third argument deleted):
  foo(
    bar,
    arg
  )

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo( bar
     , arg
     , xyz
     )

" start on f {{{3
Do (daqb with cursor on f):
  daqb
Expect (Nothing deleted):
  foo( bar
     , arg
     , xyz
     )

" start on b {{{3
Do (daqb with cursor on b):
  fbdaqb
Expect (First argument deleted):
  foo( arg
     , xyz
     )

" start on b and delete two {{{3
Do (daqbdaqb with cursor on b):
  fbdaqbdaqb
Expect (First two arguments deleted):
  foo( xyz
     )

" start on second a {{{3
Do (daqb with cursor on second a):
  jfadaqb
Expect (Second argument deleted):
  foo( bar
     , xyz
     )

" start on x {{{3
Do (daqb with cursor on x):
  jjfxdaqb
Expect (Third argument deleted):
  foo( bar
     , arg
     )

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo(bar, arg
      xyz)

" start on f {{{3
Do (daqb with cursor on f):
  daqb
Expect (Nothing deleted):
  foo(bar, arg,
      xyz)

" start on b {{{3
Do (daqb with cursor on b):
  fbdaqb
Expect (First argument deleted):
  foo(arg,
      xyz)

" start on b and delete two {{{3
Do (daqbdaqb with cursor on b):
  fbdaqbdaqb
Expect (First two arguments deleted):
  foo(xyz)

" start on second a {{{3
Do (daqb with cursor on second a):
  2fadaqb
Expect (Second argument deleted):
  foo(bar,
      xyz)

" start on x {{{3
Do (daqb with cursor on x):
  jfxdaqb
Expect (Third argument deleted):
  foo(bar, arg)

" aqB motions {{{1
" with doc foo(bar) {{{2
Given (foo(bar, arg, xyz)):
  foo{bar, arg, xyz}

" start on f {{{3
Do (daqB with cursor on f):
  daqB
Expect (Nothing deleted):
  foo{bar, arg, xyz}

" start on b {{{3
Do (daqB with cursor on b):
  fbdaqB
Expect (First argument deleted):
  foo{arg, xyz}

" start on second a {{{3
Do (daqB with cursor on second a):
  2fadaqB
Expect (Second argument deleted):
  foo{bar, xyz}

" start on x {{{3
Do (daqB with cursor on x):
  fxdaqB
Expect (Third argument deleted):
  foo{bar, arg}
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo{
    bar,
    arg,
    xyz
  }

" start on b {{{3
Do (daqB with cursor on f):
  daqB
Expect (Nothing deleted):
  foo{
    bar,
    arg,
    xyz
  }

" start on b {{{3
Do (daqB with cursor on b):
  jfbdaqB
Expect (First argument deleted):
  foo{
    arg,
    xyz
  }

" start on b and delete two {{{3
Do (daqBdaqB with cursor on b):
  jfbdaqBdaqB
Expect (First two arguments deleted):
  foo{
    xyz
  }

" start on second a {{{3
Do (daqB with cursor on second a):
  jjfadaqB
Expect (Second argument deleted):
  foo{
    bar,
    xyz
  }

" " start on z {{{3
Do (daqB with cursor on z):
  jjjfxdaqB
Expect (Third argument deleted):
  foo{
    bar,
    arg
  }

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo{ bar
     , arg
     , xyz
     }

" start on f {{{3
Do (daqB with cursor on f):
  daqB
Expect (Nothing deleted):
  foo{ bar
     , arg
     , xyz
     }

" start on b {{{3
Do (daqB with cursor on b):
  fbdaqB
Expect (First argument deleted):
  foo{ arg
     , xyz
     }

" start on b and delete two {{{3
Do (daqBdaqB with cursor on b):
  fbdaqBdaqB
Expect (First two arguments deleted):
  foo{ xyz
     }

" start on second a {{{3
Do (daqB with cursor on second a):
  jfadaqB
Expect (Second argument deleted):
  foo{ bar
     , xyz
     }

" start on x {{{3
Do (daqB with cursor on x):
  jjfxdaqB
Expect (Third argument deleted):
  foo{ bar
     , arg
     }

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo{bar, arg
      xyz}

" start on f {{{3
Do (daqB with cursor on f):
  daqB
Expect (Nothing deleted):
  foo{bar, arg,
      xyz}

" start on b {{{3
Do (daqB with cursor on b):
  fbdaqB
Expect (First argument deleted):
  foo{arg,
      xyz}

" start on b and delete two {{{3
Do (daqBdaqB with cursor on b):
  fbdaqBdaqB
Expect (First two arguments deleted):
  foo{xyz}

" start on second a {{{3
Do (daqB with cursor on second a):
  2fadaqB
Expect (Second argument deleted):
  foo{bar,
      xyz}

" start on x {{{3
Do (daqB with cursor on x):
  jfxdaqB
Expect (Third argument deleted):
  foo{bar, arg}

" aqr motions {{{1
" with doc foo(bar) {{{2
Given (foo(bar, arg, xyz)):
  foo[bar, arg, xyz]

" start on f {{{3
Do (daqr with cursor on f):
  daqr
Expect (Nothing deleted):
  foo[bar, arg, xyz]

" start on b {{{3
Do (daqr with cursor on b):
  fbdaqr
Expect (First argument deleted):
  foo[arg, xyz]

" start on second a {{{3
Do (daqr with cursor on second a):
  2fadaqr
Expect (Second argument deleted):
  foo[bar, xyz]

" start on x {{{3
Do (daqr with cursor on x):
  fxdaqr
Expect (Third argument deleted):
  foo[bar, arg]
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo[
    bar,
    arg,
    xyz
  ]

" start on b {{{3
Do (daqr with cursor on f):
  daqr
Expect (Nothing deleted):
  foo[
    bar,
    arg,
    xyz
  ]

" start on b {{{3
Do (daqr with cursor on b):
  jfbdaqr
Expect (First argument deleted):
  foo[
    arg,
    xyz
  ]

" start on b and delete two {{{3
Do (daqrdaqr with cursor on b):
  jfbdaqrdaqr
Expect (First two arguments deleted):
  foo[
    xyz
  ]

" start on second a {{{3
Do (daqr with cursor on second a):
  jjfadaqr
Expect (Second argument deleted):
  foo[
    bar,
    xyz
  ]

" " start on z {{{3
Do (daqr with cursor on z):
  jjjfxdaqr
Expect (Third argument deleted):
  foo[
    bar,
    arg
  ]

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo[ bar
     , arg
     , xyz
     ]

" start on f {{{3
Do (daqr with cursor on f):
  daqr
Expect (Nothing deleted):
  foo[ bar
     , arg
     , xyz
     ]

" start on b {{{3
Do (daqr with cursor on b):
  fbdaqr
Expect (First argument deleted):
  foo[ arg
     , xyz
     ]

" start on b and delete two {{{3
Do (daqrdaqr with cursor on b):
  fbdaqrdaqr
Expect (First two arguments deleted):
  foo[ xyz
     ]

" start on second a {{{3
Do (daqr with cursor on second a):
  jfadaqr
Expect (Second argument deleted):
  foo[ bar
     , xyz
     ]

" start on x {{{3
Do (daqr with cursor on x):
  jjfxdaqr
Expect (Third argument deleted):
  foo[ bar
     , arg
     ]

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo[bar, arg
      xyz]

" start on f {{{3
Do (daqr with cursor on f):
  daqr
Expect (Nothing deleted):
  foo[bar, arg,
      xyz]

" start on b {{{3
Do (daqr with cursor on b):
  fbdaqr
Expect (First argument deleted):
  foo[arg,
      xyz]

" start on b and delete two {{{3
Do (daqrdaqr with cursor on b):
  fbdaqrdaqr
Expect (First two arguments deleted):
  foo[xyz]

" start on second a {{{3
Do (daqr with cursor on second a):
  2fadaqr
Expect (Second argument deleted):
  foo[bar,
      xyz]

" start on x {{{3
Do (daqr with cursor on x):
  jfxdaqr
Expect (Third argument deleted):
  foo[bar, arg]

" aqa motions {{{1
" with doc foo(bar) {{{2
Given (foo<bar, arg, xyz>):
  foo<bar, arg, xyz>

" start on f {{{3
Do (daqa with cursor on f):
  daqa
Expect (Nothing deleted):
  foo<bar, arg, xyz>

" start on b {{{3
Do (daqa with cursor on b):
  fbdaqa
Expect (First argument deleted):
  foo<arg, xyz>

" start on second a {{{3
Do (daqa with cursor on second a):
  2fadaqa
Expect (Second argument deleted):
  foo<bar, xyz>

" start on x {{{3
Do (daqa with cursor on x):
  fxdaqa
Expect (Third argument deleted):
  foo<bar, arg>
" with trailing-symbol style multiline {{{2
Given (trailing-symbol style multiline):
  foo<
    bar,
    arg,
    xyz
  >

" start on b {{{3
Do (daqa with cursor on f):
  daqa
Expect (Nothing deleted):
  foo<
    bar,
    arg,
    xyz
  >

" start on b {{{3
Do (daqa with cursor on b):
  jfbdaqa
Expect (First argument deleted):
  foo<
    arg,
    xyz
  >

" start on b and delete two {{{3
Do (daqadaqa with cursor on b):
  jfbdaqadaqa
Expect (First two arguments deleted):
  foo<
    xyz
  >

" start on second a {{{3
Do (daqa with cursor on second a):
  jjfadaqa
Expect (Second argument deleted):
  foo<
    bar,
    xyz
  >

" " start on z {{{3
Do (daqa with cursor on z):
  jjjfxdaqa
Expect (Third argument deleted):
  foo<
    bar,
    arg
  >

" with leading-symbol style multiline {{{2
Given (leading-symbol style multiline):
  foo< bar
     , arg
     , xyz
     >

" start on f {{{3
Do (daqa with cursor on f):
  daqa
Expect (Nothing deleted):
  foo< bar
     , arg
     , xyz
     >

" start on b {{{3
Do (daqa with cursor on b):
  fbdaqa
Expect (First argument deleted):
  foo< arg
     , xyz
     >

" start on b and delete two {{{3
Do (daqadaqa with cursor on b):
  fbdaqadaqa
Expect (First two arguments deleted):
  foo< xyz
     >

" start on second a {{{3
Do (daqa with cursor on second a):
  jfadaqa
Expect (Second argument deleted):
  foo< bar
     , xyz
     >

" start on x {{{3
Do (daqa with cursor on x):
  jjfxdaqa
Expect (Third argument deleted):
  foo< bar
     , arg
     >

" with opening delimiter style multiline {{{2
Given (opening delimiter style multiline):
  foo<bar, arg
      xyz>

" start on f {{{3
Do (daqa with cursor on f):
  daqa
Expect (Nothing deleted):
  foo<bar, arg,
      xyz>

" start on b {{{3
Do (daqa with cursor on b):
  fbdaqa
Expect (First argument deleted):
  foo<arg,
      xyz>

" start on b and delete two {{{3
Do (daqadaqb with cursor on b):
  fbdaqadaqa
Expect (First two arguments deleted):
  foo<xyz>

" start on second a {{{3
Do (daqa with cursor on second a):
  2fadaqa
Expect (Second argument deleted):
  foo<bar,
      xyz>

" start on x {{{3
Do (daqa with cursor on x):
  jfxdaqa
Expect (Third argument deleted):
  foo<bar, arg>

