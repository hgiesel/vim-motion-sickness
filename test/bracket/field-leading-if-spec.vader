" difb {{{1
Given (leading style):
  foo( bar
     , arg
     , xyz
     )

Do (difb with cursor on f):
  difb
Expect (Nothing deleted):
  foo( bar
     , arg
     , xyz
     )

Do (difb with cursor on b):
  fbdifb
Expect (First argument deleted):
  foo( 
     , arg
     , xyz
     )

Do (difb with cursor on second a):
  jfadifb
Expect (Second argument deleted):
  foo( bar
     , 
     , xyz
     )

Do (difb with cursor on x):
  jjfxdifb
Expect (Third argument deleted):
  foo( bar
     , arg
     , 
     )

" difB {{{1
Given (leading-symbol style):
  foo{ bar
     , arg
     , xyz
     }

Do (difB with cursor on f):
  difB
Expect (Nothing deleted):
  foo{ bar
     , arg
     , xyz
     }

Do (difB with cursor on b):
  fbdifB
Expect (First argument deleted):
  foo{ 
     , arg
     , xyz
     }

Do (difB with cursor on second a):
  jfadifB
Expect (Second argument deleted):
  foo{ bar
     , 
     , xyz
     }

Do (difB with cursor on x):
  jjfxdifB
Expect (Third argument deleted):
  foo{ bar
     , arg
     , 
     }

" difr {{{1
Given (leading-symbol style):
  foo[ bar
     , arg
     , xyz
     ]

Do (difr with cursor on f):
  difr
Expect (Nothing deleted):
  foo[ bar
     , arg
     , xyz
     ]

Do (difr with cursor on b):
  fbdifr
Expect (First argument deleted):
  foo[ 
     , arg
     , xyz
     ]

Do (difr with cursor on second a):
  jfadifr
Expect (Second argument deleted):
  foo[ bar
     , 
     , xyz
     ]

Do (difr with cursor on x):
  jjfxdifr
Expect (Third argument deleted):
  foo[ bar
     , arg
     , 
     ]

" difa {{{1
Given (leading-symbol style):
  foo< bar
     , arg
     , xyz
     >

Do (difa with cursor on f):
  difa
Expect (Nothing deleted):
  foo< bar
     , arg
     , xyz
     >

Do (difa with cursor on b):
  fbdifa
Expect (First argument deleted):
  foo< 
     , arg
     , xyz
     >

Do (difa with cursor on second a):
  jfadifa
Expect (Second argument deleted):
  foo< bar
     , 
     , xyz
     >

Do (difa with cursor on x):
  jjfxdifa
Expect (Third argument deleted):
  foo< bar
     , arg
     , 
     >
