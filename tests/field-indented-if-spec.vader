" difb with two line {{{1
Given (difb with two line):
  foo(bar, arg,
      xyz)

Do (difb with cursor on f):
  difb
Expect (Nothing deleted):
  foo(bar, arg,
      xyz)

Do (difb with cursor on b):
  fbdifb
Expect (First argument deleted):
  foo(, arg,
      xyz)

Do (difb with cursor on second a):
  2fadifb
Expect (Second argument deleted):
  foo(bar, ,
      xyz)

Do (difb with cursor on x):
  jfxdifb
Expect (Third argument deleted):
  foo(bar, arg,
      )

" difB with two line {{{1
Given (difB with two line):
  foo{bar, arg,
      xyz}

Do (difB with cursor on f):
  difB
Expect (Nothing deleted):
  foo{bar, arg,
      xyz}

Do (difB with cursor on b):
  fbdifB
Expect (First argument deleted):
  foo{, arg,
      xyz}

Do (difB with cursor on second a):
  2fadifB
Expect (Second argument deleted):
  foo{bar, ,
      xyz}

Do (difB with cursor on x):
  jfxdifB
Expect (Third argument deleted):
  foo{bar, arg,
      }

" difr with two line {{{1
Given (difr with two line):
  foo[bar, arg,
      xyz]

Do (difr with cursor on f):
  difr
Expect (Nothing deleted):
  foo[bar, arg,
      xyz]

Do (difr with cursor on b):
  fbdifr
Expect (First argument deleted):
  foo[, arg,
      xyz]

Do (difr with cursor on second a):
  2fadifr
Expect (Second argument deleted):
  foo[bar, ,
      xyz]

Do (difr with cursor on x):
  jfxdifr
Expect (Third argument deleted):
  foo[bar, arg,
      ]

" difa with two line {{{1
Given (difa with two line):
  foo<bar, arg,
      xyz>

Do (difa with cursor on f):
  difa
Expect (Nothing deleted):
  foo<bar, arg,
      xyz>

Do (difa with cursor on b):
  fbdifa
Expect (First argument deleted):
  foo<, arg,
      xyz>

Do (difa with cursor on second a):
  2fadifa
Expect (Second argument deleted):
  foo<bar, ,
      xyz>

Do (difa with cursor on x):
  jfxdifa
Expect (Third argument deleted):
  foo<bar, arg,
      >
